# Generated by Django 4.2.3 on 2023-07-29 00:42

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import utils.main


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='VisuleoUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('id', models.UUIDField(default=utils.main.generate_uuid, editable=False, help_text='Unique identifier for this object.', primary_key=True, serialize=False, verbose_name='id')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date and time when this object was created.', verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Date and time when this object was last modified.', verbose_name='modified')),
                ('is_deleted', models.BooleanField(default=False, help_text='Boolean field to mark if this object is deleted.', verbose_name='is deleted')),
                ('name', models.CharField(blank=True, help_text="User's full name.", max_length=255, verbose_name='name')),
                ('email', models.EmailField(help_text="User's email address.", max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, help_text="User's phone number.", max_length=20, verbose_name='phone number')),
                ('is_email_verified', models.BooleanField(default=False, help_text="Boolean field to mark if this user's email is verified.", verbose_name='is email verified')),
                ('is_phone_number_verified', models.BooleanField(default=False, help_text="Boolean field to mark if this user's phone number is verified.", verbose_name='is phone number verified')),
                ('is_active', models.BooleanField(default=True, help_text='Boolean field to mark if this user is active.', verbose_name='is active')),
                ('is_superuser', models.BooleanField(default=False, help_text='Boolean field to mark if this user is superuser.', verbose_name='is superuser')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when this user last logged in.', verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Date and time when this user joined.', verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-created', '-modified'),
            },
        ),
    ]
